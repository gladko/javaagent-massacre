

// TOOD: deduplicate


dependencies {
    implementation project(':toolbox')
    implementation project(':workbench')

    implementation "org.ow2.asm:asm:9.6"
    implementation "org.ow2.asm:asm-commons:9.6"
    implementation "org.ow2.asm:asm-tree:9.6"
    implementation "org.ow2.asm:asm-analysis:9.6"
    implementation "org.ow2.asm:asm-util:9.6"
}

task appJar(type: Jar, dependsOn: ['jar']) {
    archiveBaseName = "application"

    duplicatesStrategy =  DuplicatesStrategy.WARN

    manifest {
        attributes(
                "Main-Class":    "jug.gvsmirnov.javaagent.helloworld.HelloWorldApplication",
        )
    }

    from {
        configurations.compileClasspath.collect {
            zipTree(it).matching { exclude 'META-INF/**' }
        }
    }

    from zipTree(jar.archivePath)
}

task agentJar(type: Jar, dependsOn: ['jar']) {
    archiveBaseName = "agent"

    manifest {
        attributes(
                "Premain-Class": "jug.gvsmirnov.javaagent.helloworld.HelloWorldAgent",
        )
    }
}


// TODO: de-duplicate this

task runBaseline(dependsOn: appJar, type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    systemProperties = [
            'app.jar.path': appJar.archivePath
    ]

    main = 'jug.gvsmirnov.javaagent.helloworld.Setup'
    args 'baseline'
}

task runAgent(dependsOn: [appJar, agentJar], type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    systemProperties = [
            'app.jar.path': appJar.archivePath,
            'agent.jar.path': agentJar.archivePath
    ]

    main = 'jug.gvsmirnov.javaagent.helloworld.Setup'
    args 'agent'
}

task runAgentAndTraceClassLoading(dependsOn: [appJar, agentJar], type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    systemProperties = [
            'app.jar.path': appJar.archivePath,
            'agent.jar.path': agentJar.archivePath
    ]

    main = 'jug.gvsmirnov.javaagent.helloworld.Setup'
    args 'agent-tcl'
}